paths:
  /api/pets:
    get:
      summary: Obtengo todas las mascotas de la base de datos
      tags:
        - Pets
      responses:
        "200":
          description: Se obtienen todas las mascotas correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Pets"
        "500":
          description: Error interno del servidor
    post:
      summary: Endpoint para crear una mascota
      tags:
        - Pets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createPet"
      responses:
        "201":
          description: La mascota ha sido creada correctamente
        "500":
          description: Error fatal
  
  /api/pets/{uid}:
    put: 
      summary: Endpoint para actualizar una mascota
      tags:
        - Pets
      parameters:
      - name: uid
        in: path
        required: true
        description: Ingresa el id de la mascota que deseas modificar
        schema:
          type: string
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#components/requestBodies/updatePet"
      responses:
        "200":
          description: La mascota se ha actualizado correctamente
        "400":
          description: La mascota no ha sido encontrada
        "500":
          description: Error del servidor
    delete:
      summary: Endpoint para eliminar una mascota
      tags:
        - Pets
      parameters:
        - name: uid
          in: path
          required: true
          description: Ingresa el id de la mascota a eliminar
          schema:
            type: string
      responses:
        "200":
          description: La mascota se ha eliminaado correctamente
        "400":
          description: La mascota no ha sido encontrada
        "500":
          description: Error del servidor

components:
  schemas:
    Pets:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
        name:
          type: string
          description: Nombre de la mascota
        specie:
          type: string
          description: Especie de la mascota
        birthDate:
          type: string
          description: Fecha de nacimiento de la mascota
      example:
        _id: ObjectId("1234")
        name: Púa
        specie: Cerdo
        birthDate: 2022-10-20
  
  requestBodies:
    createPet:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la mascota
        specie:
          type: string
          description: Especie de la mascota
        birthDate:
          type: string
          description: Fecha de nacimiento de la mascota
      example:
        name: Púa
        specie: Cerdo
        birthDate: 2022-10-20

    updatePet:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la mascota
        specie:
          type: string
          description: Especie de la mascota
        birthdate:
          type: string
          description: Fecha de nacimiento de la mascota
      example:
        name: Púa
        specie: Cerdo
        birthdate: 2022-10-20  
